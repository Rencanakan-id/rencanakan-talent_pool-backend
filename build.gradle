plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.sonarqube' version '4.3.1.3277'
    id 'jacoco' // Untuk code coverage
}

group = 'rencanakan.id'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'jakarta.validation:jakarta.validation-api:3.1.1'
	implementation 'org.hibernate.validator:hibernate-validator:8.0.0.Final'
	implementation 'org.postgresql:postgresql'
	implementation 'io.cucumber:cucumber-spring:7.21.1'
	implementation 'io.cucumber:cucumber-java:7.21.1'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.18.3'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'com.h2database:h2'
	testImplementation 'io.cucumber:cucumber-junit:7.21.1'
	testImplementation 'org.mockito:mockito-core:5.5.0'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.test {
	useJUnitPlatform()
	finalizedBy(tasks.jacocoTestReport) // report is always generated after tests run
}
tasks.jacocoTestReport {
	dependsOn(tasks.test) // tests are required to run before generating the report
	reports {
		xml.required = true
		html.required = true

	}


}

sonarqube {
	properties {
		property "sonar.projectKey", "B9JagoNgadpro_gametime_auth"
		property "sonar.organization", "b9jagongadpro"
		property "sonar.java.binaries", "."
		property "sonar.gradle.skipCompile", "true"
	}
}