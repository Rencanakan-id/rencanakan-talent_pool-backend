### Set environment variable
@baseUrl = https://api-talentpool.rencanakan.my.id
@authToken = Bearer eyJhbGciOiJIUzI1NiJ9.eyJmaXJzdE5hbWUiOiJKb2huIERvZSIsImlkIjoiYTE3MmQ5ZTktODM5ZC00YThlLWEwNzgtODYzYWY4YTE5YmUxIiwiZW1haWwiOiJqb2huLmRvZUBleGFtcGxlLmNvbSIsInN1YiI6ImpvaG4uZG9lQGV4YW1wbGUuY29tIiwiaWF0IjoxNzQ3MDE5NjM5LCJleHAiOjE3NDcxMDYwMzl9.c6yzYlKVtJQ1mL5HuNl4lFGt1-elStIhsuBcV15i5lo
@userId =  a172d9e9-839d-4a8e-a078-863af8a19be1
@certificateId = 1

### Get all certificates for a user
GET {{baseUrl}}/api/certificates/user/{{userId}}
Authorization: {{authToken}}

### Get certificate by ID
GET {{baseUrl}}/api/certificates/{{certificateId}}
Authorization: {{authToken}}

### Create a new certificate
POST {{baseUrl}}/api/certificates
Authorization: {{authToken}}
Content-Type: application/json

{
  "title": "Certified Spring Developer",
  "issuer": "Spring Academy",
  "issueDate": "2024-01-15",
  "file":"hahaha.png",
  "description": "Successfully completed the Spring Developer Certification"
}

### Update a certificate
PUT {{baseUrl}}/api/certificates/{{certificateId}}
Authorization: {{authToken}}
Content-Type: application/json

{
  "title": "Updated Spring Developer",
  "issuer": "Spring Academy",
  "issueDate": "2024-01-15",
  "description": "Updated description for the Spring certification"
}

### Delete a certificate
DELETE {{baseUrl}}/api/certificates/{{certificateId}}
Authorization: {{authToken}}
